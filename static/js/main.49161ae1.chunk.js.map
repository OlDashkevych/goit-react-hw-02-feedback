{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/Statistics/Statistics.module.css","components/Notification/Notifications.module.css","components/App/App.module.css","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistic/Statistic.jsx","components/Section/Section.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","components/App/App.jsx","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","good","neutral","bad","className","styles","btnBoxTitle","btnBox","button","type","data-rate","onClick","Statistic","label","value","defaultProps","Section","children","Statistics","total","positivePercentage","statisticsBoxTitle","feedbackList","Notifications","message","notifications","App","state","handleLeaveFeedback","feedback","target","dataset","rate","setState","prevState","Object","values","this","reduce","el","Math","floor","countTotalFeedback","feedbackContainer","countPositiveFeedbackPercentage","Notification","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.49161ae1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnBox\":\"FeedbackOptions_btnBox__2504q\",\"btnBoxTitle\":\"FeedbackOptions_btnBoxTitle__1Wpdb\",\"button\":\"FeedbackOptions_button__LWuKU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackList\":\"Statistics_feedbackList__2R_R3\",\"statisticsBoxTitle\":\"Statistics_statisticsBoxTitle__2W0l-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notifications\":\"Notifications_notifications__8EnVa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackContainer\":\"App_feedbackContainer__hnIBv\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  const [good, neutral, bad] = options;\n  return (\n    <div>\n      <span className={styles.btnBoxTitle}>Please leave feedback</span>\n      <div className={styles.btnBox}>\n        <button\n          className={styles.button}\n          type=\"button\"\n          data-rate={good}\n          onClick={onLeaveFeedback}\n        >\n          Good\n        </button>\n\n        <button\n          className={styles.button}\n          type=\"button\"\n          data-rate={neutral}\n          onClick={onLeaveFeedback}\n        >\n          Neutral\n        </button>\n        <button\n          className={styles.button}\n          type=\"button\"\n          data-rate={bad}\n          onClick={onLeaveFeedback}\n        >\n          Bad\n        </button>\n      </div>\n    </div>\n  );\n};\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: PropTypes.func.isRequired,\n  options: PropTypes.instanceOf(Array).isRequired,\n};\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Statistic = ({ label, value }) => (\n  <li className=\"feddbackItem\">{`${label}: ${value}`}</li>\n);\nStatistic.defaultProps = {\n  label: 'feedback',\n  value: 0,\n};\nStatistic.propTypes = {\n  label: PropTypes.string,\n  value: PropTypes.number,\n};\nexport default Statistic;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ children }) => <li className=\"Item\">{children}</li>;\n\nSection.propTypes = {\n  children: PropTypes.node.isRequired,\n};\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Statistic from '../Statistic/Statistic';\nimport Section from '../Section/Section';\nimport styles from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <div>\n    <span className={styles.statisticsBoxTitle}>Statistics</span>\n    <ul className={styles.feedbackList}>\n      <Section>\n        <Statistic label=\"Good\" value={good} />\n      </Section>\n      <Section>\n        <Statistic label=\"Neutral\" value={neutral} />\n      </Section>\n      <Section>\n        <Statistic label=\"Bad\" value={bad} />\n      </Section>\n      <Section>\n        <Statistic label=\"Total\" value={total} />\n      </Section>\n      <Section>\n        <Statistic label=\"Positive feedback\" value={positivePercentage} />\n      </Section>\n    </ul>\n  </div>\n);\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Notifications.module.css';\n\nconst Notifications = ({ message }) => (\n  <div className={styles.notifications}>{message}</div>\n);\nNotifications.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notifications;\n","import React, { Component } from 'react';\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\nimport Statistics from '../Statistics/Statistics';\nimport Notification from '../Notification/Notification';\nimport styles from './App.module.css';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleLeaveFeedback = ({ target }) => {\n    const feedback = target.dataset.rate;\n    this.setState(prevState => ({\n      [feedback]: prevState[feedback] + 1,\n    }));\n  };\n\n  countTotalFeedback() {\n    return Object.values(this.state).reduce((total, el) => total + el, 0);\n  }\n\n  countPositiveFeedbackPercentage() {\n    const { good } = this.state;\n    const percentagePositiveFeedback = `${Math.floor(\n      (good / this.countTotalFeedback()) * 100,\n    )}%`;\n    return percentagePositiveFeedback;\n  }\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <div className={styles.feedbackContainer}>\n        <FeedbackOptions\n          options={['good', 'neutral', 'bad']}\n          onLeaveFeedback={this.handleLeaveFeedback}\n        />\n        {good > 0 || neutral > 0 || bad > 0 ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={this.countTotalFeedback()}\n            positivePercentage={this.countPositiveFeedbackPercentage()}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}